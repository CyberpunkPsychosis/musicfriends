<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.music.friends.app.dao.IdeaMapper">
  <resultMap id="BaseResultMap" type="com.music.friends.app.pojo.Idea">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="pictures" jdbcType="VARCHAR" property="pictures" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="authority_flag" jdbcType="INTEGER" property="authorityFlag" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.music.friends.app.pojo.Idea">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, pictures, create_time, authority_flag, user_id
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from music_friends_idea
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from music_friends_idea
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.music.friends.app.pojo.Idea">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into music_friends_idea (id, pictures, create_time, 
      authority_flag, user_id, content
      )
    values (#{id,jdbcType=VARCHAR}, #{pictures,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{authorityFlag,jdbcType=INTEGER}, #{userId,jdbcType=VARCHAR}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.music.friends.app.pojo.Idea">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into music_friends_idea
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="pictures != null">
        pictures,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="authorityFlag != null">
        authority_flag,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="pictures != null">
        #{pictures,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="authorityFlag != null">
        #{authorityFlag,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.music.friends.app.pojo.Idea">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update music_friends_idea
    <set>
      <if test="pictures != null">
        pictures = #{pictures,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="authorityFlag != null">
        authority_flag = #{authorityFlag,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.music.friends.app.pojo.Idea">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update music_friends_idea
    set pictures = #{pictures,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      authority_flag = #{authorityFlag,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.music.friends.app.pojo.Idea">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update music_friends_idea
    set pictures = #{pictures,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      authority_flag = #{authorityFlag,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <select id="selectByUserId" parameterType="string" resultMap="BaseResultMap">
    select
    id, content, pictures, create_time, authority_flag, user_id
    from music_friends_idea
    where user_id = #{userId}
  </select>

  <select id="selectAllPublicFriendsMyself" parameterType="string" resultMap="BaseResultMap">
    select
      id, content, pictures, create_time, authority_flag, user_id
    from music_friends_idea
    where authority_flag = 1
    or (user_id = #{userId} and authority_flag = 2)
    or (
        user_id in (
        select other
        from (
               select other
               from music_friends_concern
               where me = #{userId}
             ) as concern

               inner join (
          select me
          from music_friends_un_concern
          where other = #{userId}
        ) as un_concern

        where concern.other = un_concern.me
        )
        and
        authority_flag = 2
      )
  </select>
</mapper>